{"version":3,"sources":["/Users/rasmus/src2/jo/src/asyncfs/asyncfs.js"],"names":[],"mappings":"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","file":"out","sourcesContent":["import fs from 'fs'\n\nexport default {\n\n// Async functions\nrename: wrap1(fs.rename),\nftruncate: wrap1(fs.ftruncate),\ntruncate: wrap1(fs.truncate),\nchown: wrap1(fs.chown),\nfchown: wrap1(fs.fchown),\nlchown: wrap1(fs.lchown),\nchmod: wrap1(fs.chmod),\nfchmod: wrap1(fs.fchmod),\nlchmod: wrap1(fs.lchmod),\nstat: wrap1_ignoreENOENT(fs.stat),\nlstat: wrap1_ignoreENOENT(fs.lstat),\nfstat: wrap1_ignoreENOENT(fs.fstat),\nlink: wrap1(fs.link),\nsymlink: wrap1(fs.symlink),\nreadlink: wrap1(fs.readlink),\nrealpath: wrap1(fs.realpath),\nunlink: wrap1(fs.unlink),\nrmdir: wrap1(fs.rmdir),\nmkdir: wrap1(fs.mkdir),\nmkdirs: mkdirs,\nreaddir: wrap1(fs.readdir),\nclose: wrap1(fs.close),\nopen: wrap1(fs.open),\nutimes: wrap1(fs.utimes),\nfutimes: wrap1(fs.futimes),\nfsync: wrap1(fs.fsync),\nwrite: wrap2(fs.write), // note: two different call signatures\nread: wrap2(fs.read),\nreadFile: wrap1(fs.readFile),\nwriteFile: wrap1(fs.writeFile),\nappendFile: wrap1(fs.appendFile),\naccess: wrap1_err2bool(fs.access),\ncopy: copy,\n\n// Non-serializable functions\nwatchFile: fs.watchFile,\nunwatchFile: fs.unwatchFile,\ncreateReadStream: fs.createReadStream,\ncreateWriteStream: fs.createWriteStream,\n\n// Types\nStats: fs.Stats,\nReadStream: fs.ReadStream,\nWriteStream: fs.WriteStream,\nFSWatcher: fs.FSWatcher,\n\n// Callback functions\nrenameAsync: fs.rename,\nftruncateAsync: fs.ftruncate,\ntruncateAsync: fs.truncate,\nchownAsync: fs.chown,\nfchownAsync: fs.fchown,\nlchownAsync: fs.lchown,\nchmodAsync: fs.chmod,\nfchmodAsync: fs.fchmod,\nlchmodAsync: fs.lchmod,\nstatAsync: fs.stat,\nlstatAsync: fs.lstat,\nfstatAsync: fs.fstat,\nlinkAsync: fs.link,\nsymlinkAsync: fs.symlink,\nreadlinkAsync: fs.readlink,\nrealpathAsync: fs.realpath,\nunlinkAsync: fs.unlink,\nrmdirAsync: fs.rmdir,\nmkdirAsync: fs.mkdir,\nreaddirAsync: fs.readdir,\ncloseAsync: fs.close,\nopenAsync: fs.open,\nutimesAsync: fs.utimes,\nfutimesAsync: fs.futimes,\nfsyncAsync: fs.fsync,\nwriteAsync: fs.write,\nreadAsync: fs.read,\nreadFileAsync: fs.readFile,\nwriteFileAsync: fs.writeFile,\nappendFileAsync: fs.appendFile,\nwatchAsync: fs.watch,\nexistsAsync: fs.exists,\naccessAsync: fs.access,\n\n// Export sync functions simply so we can use this module as a drop-in replacement for fs\nrenameSync: fs.renameSync,\nftruncateSync: fs.ftruncateSync,\ntruncateSync: fs.truncateSync,\nchownSync: fs.chownSync,\nfchownSync: fs.fchownSync,\nlchownSync: fs.lchownSync,\nchmodSync: fs.chmodSync,\nfchmodSync: fs.fchmodSync,\nlchmodSync: fs.lchmodSync,\nstatSync: fs.statSync,\nlstatSync: fs.lstatSync,\nfstatSync: fs.fstatSync,\nlinkSync: fs.linkSync,\nsymlinkSync: fs.symlinkSync,\nreadlinkSync: fs.readlinkSync,\nrealpathSync: fs.realpathSync,\nunlinkSync: fs.unlinkSync,\nrmdirSync: fs.rmdirSync,\nmkdirSync: fs.mkdirSync,\nreaddirSync: fs.readdirSync,\ncloseSync: fs.closeSync,\nopenSync: fs.openSync,\nutimesSync: fs.utimesSync,\nfutimesSync: fs.futimesSync,\nfsyncSync: fs.fsyncSync,\nwriteSync: fs.writeSync,\nreadSync: fs.readSync,\nreadFileSync: fs.readFileSync,\nwriteFileSync: fs.writeFileSync,\nappendFileSync: fs.appendFileSync,\naccessSync: fs.accessSync,\n\n}\n\nlet slice = Array.prototype.slice;\n\nfunction wrap1_ignoreENOENT(fn) { return function() {\n  let args = slice.call(arguments);\n  return new Promise((resolve, reject) => {\n    args.push(function(err, arg1) {\n      if (err) {\n        if (err.code === 'ENOENT') {\n          resolve(null)\n        } else {\n          reject(err)\n        }\n      } else {\n        resolve(arg1)\n      }\n    })\n    fn.apply(fs, args)\n  })\n}}\n\nfunction wrap1(fn) { return function() {\n  let args = Array.prototype.slice.call(arguments);\n  return new Promise((resolve, reject) => {\n    args.push(function(err, arg1) {\n      if (err) reject(err); else resolve(arg1)\n    })\n    fn.apply(fs, args)\n  })\n}}\n\nfunction wrap2(fn) { return function() {\n  let args = Array.prototype.slice.call(arguments);\n  return new Promise((resolve, reject) => {\n    args.push(function(err, arg1, arg2) {\n      if (err) reject(err); else resolve([arg1, arg2])\n    })\n    fn.apply(fs, args)\n  })\n}}\n\nfunction wrap1_err2bool(fn) { return function() {\n  let args = Array.prototype.slice.call(arguments);\n  return new Promise((resolve, reject) => {\n    args.push(err => { resolve(!err) })\n    fn.apply(fs, args)\n  })\n}}\n\nfunction mkdirs(path) {\n  return new Promise((resolve, reject) => {\n    _mkdirs(path, (err) => {\n      if (err) reject(err); else resolve();\n    })\n  })\n}\n// Example:\n// Here, \"/foo/bar\" exists:\n//   /foo/bar/baz/a/b  mkdir, fail ENOENT\n//   /foo/bar/baz/a    mkdir, fail ENOENT\n//   /foo/bar/baz      mkdir, success\n//   /foo/bar/baz/a    mkdir, success\n//   /foo/bar/baz/a/b  mkdir, success\n//                     done\n//\n// \nfunction _mkdirs(path, cb) {\n  fs.mkdir(path, function (err) {\n    if (!err || err.code === 'EEXIST') {\n      return cb();\n    } else if (err.code === 'ENOENT') {\n      path = require('path').resolve(path)\n      var p = path.lastIndexOf('/')\n      if (p === -1) {\n        cb(err)\n      } else {\n        _mkdirs(path.substr(0, p), (err) => {\n          if (err) {\n            cb(err)\n          } else {\n            fs.mkdir(path, (err) => {\n              cb(!err || err.code === 'EEXIST' ? null : err);\n            });\n          }\n        })\n      }\n    } else {\n      cb(err)\n    }\n  })\n}\n\nfunction copy(srcpath, dstpath) {\n  return new Promise((resolve, reject) => {\n    var completed = false, cb = function(err) {\n      if (!completed) {\n        completed = true\n        if (err) reject(err); else resolve();\n      }\n    }\n    var r = fs.createReadStream(srcpath), w = fs.createWriteStream(dstpath)\n    r.once('error', cb)\n    w.once('error', cb)\n    w.once('close', cb)\n    r.pipe(w)\n  })\n}\n"]}